---
- name: Set variable required_packages to false.
  ansible.builtin.set_fact:
    required_packages: false

- name: Add repostiories gpg key and add the repositories for all required packages.
  ansible.builtin.deb822_repository:
    name: "{{ repo.name }}"
    types: "{{ repo.types }}"
    uris: "{{ repo.uris }}"
    architectures: amd64
    signed_by: "{{ repo.signed_by }}"
    suites: "{{ repo.suites }}"
    components: "{{ repo.components }}"
    state: present
    enabled: true
  loop:
    - {
        name: "vscodium",
        types: "deb",
        uris: "https://download.vscodium.com/debs",
        signed_by: "https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg",
        suites: "vscodium",
        components: "main"
      }
    - {
        name: "opentofu",
        types: ["deb", "deb-src"],
        uris: "https://packagecloud.io/opentofu/tofu/ubuntu",
        signed_by: "https://packagecloud.io/opentofu/tofu/gpgkey",
        suites: "any",
        components: "main"
      }
    - {
        name: "hashicorp",
        types: ["deb"],
        uris: "https://apt.releases.hashicorp.com",
        signed_by: "https://apt.releases.hashicorp.com/gpg",
        suites: "{{ ansible_distribution_release }}",
        components: "main"
      }
    - {
        name: "zsh-completions",
        types: ["deb"],
        uris: "http://download.opensuse.org/repositories/shells:/zsh-users:/zsh-completions/xUbuntu_22.04/",
        signed_by: "https://download.opensuse.org/repositories/shells:zsh-users:zsh-completions/xUbuntu_22.04/Release.key",
        suites: "/",
        components:
      }
    - {
        name: "zsh-autosuggestions",
        types: ["deb"],
        uris: "http://download.opensuse.org/repositories/shells:/zsh-users:/zsh-autosuggestions/xUbuntu_22.04/",
        signed_by: "https://download.opensuse.org/repositories/shells:zsh-users:/zsh-autosuggestions/xUbuntu_22.04/Release.key",
        suites: "/",
        components:
      }
    - {
        name: "zsh-history-substring-search",
        types: ["deb"],
        uris: "http://download.opensuse.org/repositories/shells:/zsh-users:/zsh-history-substring-search/xUbuntu_22.04/",
        signed_by: "https://download.opensuse.org/repositories/shells:zsh-users:zsh-history-substring-search/xUbuntu_22.04/Release.key",
        suites: "/",
        components:
      }
    - {
        name: "zzsh-syntax-highlighting",
        types: ["deb"],
        uris: "http://download.opensuse.org/repositories/shells:/zsh-users:/zsh-syntax-highlighting/xUbuntu_22.04/",
        signed_by: "http://download.opensuse.org/repositories/shells:/zsh-users:/zsh-syntax-highlighting/xUbuntu_22.04/Release.key",
        suites: "/",
        components:
      }
    - {
        name: "google-cloud",
        types: ["deb"],
        uris: "https://packages.cloud.google.com/apt/",
        signed_by: "https://packages.cloud.google.com/apt/doc/apt-key.gpg",
        suites: "cloud-sdk",
        components: "main"
      }
    - {
        name: "microsoft",
        types: ["deb"],
        uris: "https://packages.microsoft.com/repos/azure-cli/",
        signed_by: "https://packages.microsoft.com/keys/microsoft.asc",
        suites: "{{ ansible_distribution_release }}",
        components: "main"
      }
    - {
        name: "eza-community",
        types: ["deb"],
        uris: "http://deb.gierens.de",
        signed_by: "https://raw.githubusercontent.com/eza-community/eza/main/deb.asc",
        suites: "stable",
        components: "main"
      }  
  loop_control:
    loop_var: repo

- name: update apt cache before downloading pacakges.
  ansible.builtin.apt:
    update_cache: true
  register: apt_cache_updated

- name: Install required packages via apt.
  ansible.builtin.apt:
    name: "{{ apt_package.name }}"
    state: latest
  loop:
    - { name: "vim"}
    - { name: "zsh"}
    - { name: "ruby"}
    - { name: "golang"}
    - { name: "python@3.12" }
    - { name: "git" }
    - { name: "cmake" }
    - { name: "node" }
    - { name: "gpg" }
    - { name: "openssh" }
    - { name: "powerlevel10k" }
    - { name: "zsh-autosuggestions" }
    - { name: "zsh-syntax-highlighting" }
    - { name: "zsh-completions" }
    - { name: "zsh-history-substring-search" }
    - { name: "konsole" }
    - { name: "codium" }
    - { name: "google-cloud-sdk" }
    - { name: "awscli" }
    - { name: "azure-cli" }
    - { name: "eza" }
    - { name: "tofu" }
    - { name: "packer" } # TODO: if open source replacement becomes availabe, then we will replace.
    - { name: "vault" } # TODO: if open source replacement becomes availabe, then we will replace.
  loop_control:
    loop_var: apt_package
  when: apt_cache_updated is changed

- name: Install hack-nerd-font
  block:

    - name: Download hack-nerd-font
      ansible.builtin.get_url:
        url: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/Hack.zip
        dest: /tmp/hack.zip
        owner: root
        group: root
        mode: "0o644"
    
    - name: Copy hack-nerd-font into /usr/local/share/fonts/
      ansible.builtin.unarchive:
        path: /tmp/hack.zip
        dest: /usr/local/share/fonts/
        owner: root
        group: root
        mode: "0o644"
    
    - name: Clean up hack.zip file.
      ansible.builtin.file:
        path: /tmp/hack.zip
        state: absent
        owner: root
        group: root

- name: Manually install zsh-autopair.
  block:
    
    - name: Download zsh-autopair from github.com
      ansible.builtin.git:
        repo: git@github.com:hlissner/zsh-autopair.git
        dest: $HOME/.zsh-autopair/
        clone: true
        update: true
      tags:
        - debug
    
    - name: Check if .zshrc exists.
      ansible.builtin.stat:
        path: $HOME/.zshrc
      register: config
      tags:
        - debug
    
    - name: Debug config variable
      ansible.builtin.debug:
        msg: config.stat
      tags:
        - debug

    - name: Find in file source $HOME/.zsh-autopair/autopair.zsh
      ansible.builtin.file:
      when: config.stat.isfile is defined and config.stat.isfile
      tags:
        - debug

- name: Set variable required_packages to true.
  ansible.builtin.set_fact:
    required_packages: true
