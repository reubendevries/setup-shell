---
- name: Set variable required_packages to false.
  ansible.builtin.set_fact:
    required_packages: false

- name: Add repostiories gpg key and add the repositories for all required packages.
  become: true
  ansible.builtin.deb822_repository:
    name: "{{ repo.name }}"
    types: "{{ repo.types }}"
    uris: "{{ repo.uris }}"
    architectures: amd64
    signed_by: "{{ repo.signed_by }}"
    suites: "{{ repo.suites }}"
    components: "{{ repo.components }}"
    state: present
    enabled: true
  loop:
    - {
        name: "vscodium",
        types: "deb",
        uris: "https://download.vscodium.com/debs",
        signed_by: "https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg",
        suites: "vscodium",
        components: "main"
      }
    - {
        name: "firefox",
        types: "deb",
        uris: "https://packages.mozilla.org/apt",
        signed_by: https://packages.mozilla.org/apt/repo-signing-key.gpg,
        suites: "mozilla",
        components: "main"
      }
    - {
        name: "opentofu",
        types: ["deb", "deb-src"],
        uris: "https://packages.opentofu.org/opentofu/tofu/any/",
        signed_by: "https://packagecloud.io/opentofu/tofu/gpgkey",
        suites: "any",
        components: "main"
      }
    - {
        name: "hashicorp",
        types: ["deb"],
        uris: "https://apt.releases.hashicorp.com",
        signed_by: "https://apt.releases.hashicorp.com/gpg",
        suites: "{{ ansible_distribution_release }}",
        components: "main"
      }
    - {
        name: "google-cloud",
        types: ["deb"],
        uris: "https://packages.cloud.google.com/apt/",
        signed_by: "https://packages.cloud.google.com/apt/doc/apt-key.gpg",
        suites: "cloud-sdk",
        components: "main"
      }
    - {
        name: "microsoft",
        types: ["deb"],
        uris: "https://packages.microsoft.com/repos/azure-cli/",
        signed_by: "https://packages.microsoft.com/keys/microsoft.asc",
        suites: "{{ ansible_distribution_release }}",
        components: "main"
      }
    - {
        name: "eza-community",
        types: ["deb"],
        uris: "http://deb.gierens.de",
        signed_by: "https://raw.githubusercontent.com/eza-community/eza/main/deb.asc",
        suites: "stable",
        components: "main"
      }  
  loop_control:
    loop_var: repo

- name: Add preferences to use deb over snapd
  become: true
  ansible.builtin.template:
    src: "apt_template.j2"
    dest: "/etc/apt/preferences.d/{{ file.name }}"
    owner: root
    group: root
    mode: "0o644"
  loop:
    - { name: "vscodium", url: "download.vscodium.com" }
    - { name: "firefox", url: "packages.mozilla.org" }
    - { name: "opentofu", url: "packages.opentofu.org" }
    - { name: "hashicorp", url: "releases.hashicorp.com" }
    - { name: "google-cloud", url: "packages.cloud.google.com" }
    - { name: "microsoft", url: "packages.microsoft.com" }
    - { name: "eza-community", url: "gierens.de" }

  loop_control:
    loop_var: file

- name: update apt cache before downloading pacakges.
  become: true
  ansible.builtin.apt:
    update_cache: true
  register: apt_cache_updated

- name: Install required packages via apt.
  become: true
  ansible.builtin.apt:
    name: "{{ apt_package.name }}"
    state: latest
  loop:
    - { name: "firefox" }
    - { name: "vim"}
    - { name: "zsh"}
    - { name: "ruby"}
    - { name: "golang"}
    - { name: "python3.11" }
    - { name: "git" }
    - { name: "cmake" }
    - { name: "nodejs" }
    - { name: "gpg" }
    - { name: "openssh-server" }
    - { name: "zsh" }
    - { name: "konsole" }
    - { name: "codium" }
    - { name: "google-cloud-sdk" }
    - { name: "awscli" }
    - { name: "azure-cli" }
    - { name: "eza" }
    - { name: "tofu" }
    - { name: "packer" } # TODO: if open source replacement becomes availabe, then we will replace.
    - { name: "vault" } # TODO: if open source replacement becomes availabe, then we will replace.
  loop_control:
    loop_var: apt_package
  when: apt_cache_updated is changed

- name: Update user to use /usr/bin/zsh instead of /bin/bash.
  become: true
  ansible.builtin.user:
    user: "{{ ansible_facts['user_id'] }}"
    shell: "/usr/bin/zsh"

- name: Setup /usr/bin/zsh add-ons
  block:

    - name: Create .zsh directory.
      ansible.builtin.file:
        path: "{{ ansible_facts['user_dir'] }}/{{ dir.path }}"
        state: directory
        mode: "0o700"
        owner: "{{ ansible_facts['user_uid'] }}"
        group: "{{ ansible_facts['user_gid'] }}"
      loop:
        - { path: ".zsh/" }
        - { path: ".zsh/powerlevel10k/" }
        - { path: ".zsh/zsh-autopair"}
        - { path: ".zsh/zsh-autosuggestions/" }
        - { path: ".zsh/zsh-syntax-highlighting/" }
        - { path: ".zsh/zsh-completions/" }
        - { path: ".zsh/zsh-history-substring-search/" }
      loop_control:
        loop_var: dir


    - name: Git clone for zsh add-ons.
      ansible.builtin.git:
        repo: "{{ addon.repo }}"
        dest: "{{ ansible_facts['user_dir'] }}/.zsh/{{ addon.dest }}"
        version: "master"
        clone: true
        update: true
      loop:
        - { 
            repo: "git@github.com:romkatv/powerlevel10k.git", 
            dest: "powerlevel10k/"
          }
        - {
            repo: git@github.com:hlissner/zsh-autopair,
            dest: "zsh-autopair/"
          }
        - {
            repo: "git@github.com:zsh-users/zsh-autosuggestions",
            dest: "zsh-autosuggestions/"
          }
        - {
            repo: "git@github.com:zsh-users/zsh-syntax-highlighting.git",
            dest: "zsh-syntax-highlighting/"
          }
        - {
            repo: "git@github.com:zsh-users/zsh-history-substring-search",
            dest: "zsh-history-substring-search/"
          }
        - {
            repo: "git@github.com:zsh-users/zsh-completions.git",
            dest: "zsh-completions/"
          }
      loop_control:
        loop_var: addon

- name: Install hack-nerd-font
  block:

    - name: Make {{ ansible_facts['user_dir'] }}/.local/share/fonts dir.
      ansible.builtin.file:
        path: "{{ ansible_facts['user_dir']}}/.local/share/fonts"
        state: directory
        mode: '0o700'
        owner: "{{ ansible_facts['user_uid'] }}"
        group: "{{ ansible_facts['user_gid'] }}" 

    - name: Download hack-nerd-font
      become: true
      ansible.builtin.get_url:
        url: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/Hack.zip
        dest: /tmp/hack.zip
        owner: root
        group: root
        mode: "0o644"
    
    - name: Copy hack-nerd-font into {{ ansible_facts['user_dir']}}/.local/share/fonts/"
      become: true
      ansible.builtin.unarchive:
        src: /tmp/hack.zip
        dest: "{{ ansible_facts['user_dir']}}/.local/share/fonts/"
        owner: "{{ ansible_facts['user_uid'] }}"
        group: "{{ ansible_facts['user_gid'] }}"
        mode: "0o600"
    
    - name: Clean up hack.zip file.
      become: true
      ansible.builtin.file:
        path: /tmp/hack.zip
        state: absent

- name: Set variable required_packages to true.
  ansible.builtin.set_fact:
    required_packages: true
