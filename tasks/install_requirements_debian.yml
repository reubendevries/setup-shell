---
- name: Set variable required_packages to false.
  ansible.builtin.set_fact:
    required_packages: false

- name: Get repositories gpg key and add repositories for required packages.
  block:

    - name: Add repositories gpg key for required packages.
      ansible.builtin.get_url:
        url: "{{ key.url }}"
        dest: "/etc/apt/keyrings/{{ key.dest }}"
        mode: "0o644"
        force: true
      loop:
        - {
            url: "https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg",
            dest: "vscodium.gpg"
          }
        - {
            url: "https://get.opentofu.org/opentofu.gpg",
            dest: "opentofu.gpg"
          }
        - {
            url: "https://packages.opentofu.org/opentofu/tofu/gpgkey",
            dest: "opentofu-repo.gpg"
          }
        - { 
            url: "https://apt.releases.hashicorp.com/gpg", 
            dest: "hashicorp.gpg" 
          }
        - {
            url: "https://download.opensuse.org/repositories/shells:zsh-users:zsh-completions/xUbuntu_22.04/Release.key",
            dest: "zsh-completions.gpg"
          }
        - {
            url: "https://download.opensuse.org/repositories/shells:zsh-users:zsh-history-substring-search/xUbuntu_22.04/Release.key",
            dest: "zsh-history-substring-search.gpg"
          }
        - {
            url: "https://packages.cloud.google.com/apt/doc/apt-key.gpg",
            dest: "cloud.google.gpg"
          }
        - {
            url: "https://packages.microsoft.com/keys/microsoft.asc",
            dest: "microsoft.gpg"
          }
        - {
            url: "https://raw.githubusercontent.com/eza-community/eza/main/deb.asc",
            dest: "eza-community.gpg"
          }
        
      loop_control:
        loop_var: key

    - name: Add repositories for required packages.
      ansible.builtin.apt_repository:
        repo: "{{ repo.entry }}"
        state: present
        filename: "{{ repo.filename }}"
      loop:
        - { 
            entry:
            "deb [signed-by=/etc/apt/keyrings/hashicorp.gpg] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main",
            filename: "hashicorp"
          }
        - {
            entry:
              "deb [signed-by=/etc/apt/keyrings/vscodium.gpg] https://download.vscodium.com/debs vscodium main",
            filename: "vscodium"
          }
        - {
            entry:
              "deb [signed-by=/etc/apt/keyrings/opentofu.gpg,/etc/apt/keyrings/opentofu-repo.gpg] https://packages.opentofu.org/opentofu/tofu/any/ any main",
            filename: "opentofu"
          }
        - {
            entry: 
              "deb [signed-by=/etc/apt/keyrings/zsh-completions.gpg] http://download.opensuse.org/repositories/shells:/zsh-users:/zsh-completions/ {{ ansible_distribution_release }} main",
            filename: "zsh-completions"
          }
        - {
            entry: 
              "deb [signed-by=/etc/apt/keyrings/zsh-history-substring-search.gpg] http://download.opensuse.org/repositories/shells:/zsh-users:/zsh-history-substring-search/ {{ ansible_distribution_release}} main",
            filename: "zsh-history-substring-search"
          }
        - {
            entry: 
              "deb [signed-by=/etc/apt/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt/ cloud-sdk main",
            filename: "google-cloud-sdk"
          }
        - {
            entry: "deb [signed-by=/etc/apt/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/azure-cli/ {{ ansible_distribution_release }} main",
            filename: "azure-cli"
          }
        - {
            entry: 
              "deb [signed-by=/etc/apt/keyrings/gierens.gpg] http://deb.gierens.de {{ ansible_distribution_release }} main",
            filename: "eza-community"
          }
      loop_control:
        loop_var: repo

- name: Install required packages via apt.
  ansible.builtin.apt:
    name: "{{ apt_package.name }}"
    state: latest
  loop:
    - { name: "vim"}
    - { name: "zsh"}
    - { name: "ruby"}
    - { name: "golang"}
    - { name: "python@3.12" }
    - { name: "git" }
    - { name: "cmake" }
    - { name: "node" }
    - { name: "gpg" }
    - { name: "openssh" }
    - { name: "powerlevel10k" }
    - { name: "zsh-autosuggestions" }
    - { name: "zsh-syntax-highlighting" }
    - { name: "zsh-completions" }
    - { name: "zsh-history-substring-search" }
    - { name: "konsole" }
    - { name: "codium" }
    - { name: "google-cloud-sdk" }
    - { name: "awscli" }
    - { name: "azure-cli" }
    - { name: "eza" }
    - { name: "tofu" }
    - { name: "packer" } # TODO: if open source replacement becomes availabe, then we will replace.
    - { name: "vault" } # TODO: if open source replacement becomes availabe, then we will replace.
  loop_control:
    loop_var: apt_package

- name: Install hack-nerd-font
  block:

    - name: Download hack-nerd-font
      ansible.builtin.get_url:
        url: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/Hack.zip
        dest: /tmp/hack.zip
        owner: root
        group: root
        mode: "0o644"
    
    - name: Copy hack-nerd-font into /usr/local/share/fonts/
      ansible.builtin.unarchive:
        path: /tmp/hack.zip
        dest: /usr/local/share/fonts/
        owner: root
        group: root
        mode: "0o644"
    
    - name: Clean up hack.zip file.
      ansible.builtin.file:
        path: /tmp/hack.zip
        state: absent
        owner: root
        group: root

- name: Manually install zsh-autopair.
  block:
    
    - name: Download zsh-autopair from github.com
      ansible.builtin.git:
        repo: git@github.com:hlissner/zsh-autopair.git
        dest: $HOME/.zsh-autopair/
        clone: true
        update: true
      tags:
        - debug
    
    - name: Check if .zshrc exists.
      ansible.builtin.stat:
        path: $HOME/.zshrc
      register: config
      tags:
        - debug
    
    - name: Debug config variable
      ansible.builtin.debug:
        msg: config.stat
      tags:
        - debug

    - name: Find in file source $HOME/.zsh-autopair/autopair.zsh
      ansible.builtin.file:
      when: config.stat.isfile is defined and config.stat.isfile
      tags:
        - debug

- name: Set variable required_packages to true.
  ansible.builtin.set_fact:
    required_packages: true
