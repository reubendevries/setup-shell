---
- name: Install required packages via package manager
  ansible.builtin.package:
    name:
      - '{{ package }}'
    state: present
    become: true
  with_items:
    - vim
    - git
    - powerline-fonts
    - fzf
    - zsh
  loop_control:
    loop_var: package
  when: ansible_facts['distribution'] == 'Ubuntu' or ansible_facts['distribution'] == 'RedHat'

- name: Check for homebrew installation script.
  ansible.builtin.stat:
    path: /tmp/homebrew.sh
  register: homebrew

- name: Get homebrew installation script.
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh
    dest: /tmp/homebrew.sh
    mode: 0755
  when: ansible_facts['distribution'] == 'MacOSX' and not homebrew.stat.exists

- name: Install homebrew from script.
  ansible.builtin.shell:
    cmd: /bin/bash /tmp/homebrew.sh
  when: ansible_facts['distribution'] == 'MacOSX' and homebrew.stat.exists

- name: Install required packages via homebrew.
  community.general.homebrew:
    name: '{{ brew_package }}'
    state: latest
  with_items:
    - vim
    - zsh
    - ruby
    - vault
    - terraform
    - go
    - python@3.11
    - git
    - packer
    - exa
  loop_control:
    loop_var: brew_package
  when: ansible_facts['distribution'] == 'MacOSX'

- name: Tap homebrew repositories.
  community.general.homebrew_tap:
    name: '{{ cask_repo }}'
    state: present
  with_items:
    - homebrew/cask-fonts
  loop_control:
    loop_var: cask_repo
  when: ansible_facts['distribution'] == 'MacOSX'

- name: Install required packages via homebrew cask.
  community.general.homebrew_cask:
    name: '{{ cask_package }}'
    state: latest
  with_items:
    - kitty
    - font-hack-nerd-font
  loop_control:
    loop_var: cask_package
  when: ansible_facts['distribution'] == 'MacOSX'

- name: Check for config folder.
  ansible.builtin.stat:
    path: $HOME/.config
  register: config

- name: Create config folder.
  ansible.builtin.file:
    path: $HOME/.config
    state: directory
  when: not config.stat.exists

- name: Check for kitty configuration file.
  ansible.builtin.stat:
    path: $HOME/.config/kitty/kitty.conf
  register: kitty

- name: Create kitty folder
  ansible.builtin.file:
    path: $HOME/.config/kitty
    state: directory
  when: not kitty.stat.exists

- name: Create kitty config file.
  ansible.builtin.file:
    path: $HOME/.config/kitty/kitty.conf
    state: touch
  when: not kitty.stat.exists

- name: Download MesloLGS NF
  ansible.builtin.get_url:
    url: '{{ font }}'
    dest: $HOME/Library/Fonts/'{{ name }}'
  with_items:
    - https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Regular.ttf 
    - https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold.ttf
    - https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Italic.ttf
    - https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold%20Italic.ttf
  loop:
    - 'MesloLGS NF Regular.tff'
    - 'MesloLGS NF Bold.tff'
    - 'MesloLGS NF Italic.tff'
    - 'MesloLGS NF Bold Italic.tff'
  loop_control:
    loop_var: [font, name]
  when: kitty.stat.exists

- name: Update Kitty Config to use MEsloLGS NF
  ansible.builtin.lineinfile:
    path: $HOME/.config/kitty/kitty.conf
    regex: '^font_family*'
    line: 'font_family MesloLGS NF'
    state: present
