---
- name: Install required packages via package manager
  ansible.builtin.package:
    name:
      - '{{ package.name }}'
    state: '{{ package.state }}'
  loop:
    - { name: 'vim', state: 'latest' }
    - { name: 'zsh', state: 'latest' }
    - { name: 'ruby', state: 'latest' }
    - { name: 'vault', state: 'latest' }
    - { name: 'terraform', state: 'latest' }
    - { name: 'go', state: 'latest' }
    - { name: 'python@3.11', state: 'latest' }
    - { name: 'git', state: 'latest' }
    - { name: 'packer', state: 'latest' }
    - { name: 'exa', state: 'latest' }
    - { name: 'cmake', state: 'latest' }
  loop_control:
    loop_var: package
  become: true
  when: ansible_facts['distribution'] == 'Ubuntu' or ansible_facts['distribution'] == 'RedHat'

- name: Get get installation script.
  ansible.builtin.get_url:
    url: '{{ script.url }}'
    dest: '{{ script.name }}'
    mode: 0755
  loop:
    - { url: https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh , name: /tmp/homebrew.sh }
  loop_control:
    loop_var: script
  when: ansible_facts['distribution'] == 'MacOSX'

- name: Install homebrew from script.
  ansible.builtin.shell:
    cmd: /bin/bash /tmp/homebrew.sh
  when: ansible_facts['distribution'] == 'MacOSX'

- name: Install required packages via homebrew.
  community.general.homebrew:
    name: '{{ brew_package.name }}'
    state: '{{ brew_package.state }}'
  loop:
    - { name: 'vim', state: 'latest' }
    - { name: 'zsh', state: 'latest' }
    - { name: 'ruby', state: 'latest' }
    - { name: 'vault', state: 'latest' }
    - { name: 'terraform', state: 'latest' }
    - { name: 'go', state: 'latest' }
    - { name: 'python@3.11', state: 'latest' }
    - { name: 'git', state: 'latest' }
    - { name: 'packer', state: 'latest' }
    - { name: 'exa', state: 'latest' }
    - { name: 'cmake', state: 'latest' }
    - { name: 'romkatv/powerlevel10k/powerlevel10k', state: 'latest' }
    - { name: 'zsh-autosuggestions', state: 'latest' }
    - { name: 'zsh-syntax-highlighting', state: 'latest' }
    - { name: 'zsh-completions', state: 'latest' }
    - { name: 'zsh-history-substring-search', state: 'latest' }  
  loop_control:
    loop_var: brew_package
  when: ansible_facts['distribution'] == 'MacOSX'

- name: Tap homebrew repositories.
  community.general.homebrew_tap:
    name: '{{ cask_repo.name }}'
    state: '{{ cask_repo.state }}'
  loop:
    - {name: 'font-hack-nerd-font', state: 'present' }
  loop_control:
    loop_var: cask_repo
  when: ansible_facts['distribution'] == 'MacOSX'

- name: Install required packages via homebrew cask.
  community.general.homebrew_cask:
    name: '{{ cask_package.name }}'
    state: '{{ cask_package.state }}'
  loop:
    - { name: 'iterm2', state: 'latest' }
    - { name: 'font-hack-nerd-font', state: 'latest' }
  loop_control:
    loop_var: cask_package
  when: ansible_facts['distribution'] == 'MacOSX'
